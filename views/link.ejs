const express = require('express')
const app = express()
const http = require('http').Server(app);
const io = require('socket.io')(http);
var _ = require('lodash');


//set the template engine ejs
app.set('view engine', 'ejs')

//middlewares
app.use(express.static('public'))

var usernames = [], room;
app.get('/', function(req, res){
  res.render('index')
  console.log("request",req.query);
  if(!_.isEmpty(req.query)){
    room = req.query.id;
    if(!usernames.some(s => s.username === req.query.username))
      console.log("request >>> usernames",usernames, "room>>>>>>",room)
      usernames.push(req.query);
  } else {
    room = '';
  }
});

io.on('connection', function(socket){
  //default username

  console.log('connected',socket.id)
    //listen on change_username
    socket.on('add_username', (data) => {
      console.log("data",data);
      socket.username = data.username
      if(!usernames.some(s => s.username === socket.username && _.isEmpty(socket.username) ))
        usernames.push({usrename: socket.username, id: socket.id });
      io.emit('res',{message:"you are added"})
      console.log("usernames",usernames, "room<<<<<<", room);
      if(usernames.length >= 2 && room) {
        socket.emit('redirect', usernames);
      } else {
        socket.emit('link',  {link: '192.168.1.181:3000', id: socket.id, username: socket.username})
      }
    })

    socket.on('join', (room) => {
      console.log("room",room);
      socket.join(room)
    })

    //listen on new_message
    socket.on('new_message', (data) => {
        //broadcast the new message
      io.sockets.emit('new_message', {message : data.message, username : socket.username});
    })

    //listen on typing
    socket.on('typing', (data) => {
      socket.broadcast.emit('typing', {username : socket.username})
    })

  socket.on('disconnect', function(){
    console.log('disconnected');
  });
});

http.listen(3000, '192.168.1.181');